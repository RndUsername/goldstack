#cloud-config
users:
  - name: goldstack
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys: []
package_update: true
package_upgrade: true
packages:
  - fail2ban
  - ufw
  - curl
  - unzip
  - docker.io

write_files:
  - path: /home/goldstack/unpack-secrets.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      SECRETS_DIR="/home/goldstack/app/secrets"
      CREDENTIALS_FILE="/home/goldstack/credentials.json"
      
      mkdir -p "$SECRETS_DIR"
      rm -f "$SECRETS_DIR/*"
      
      keys=$(jq -r 'keys[]' "$CREDENTIALS_FILE")
      
      for key in $keys; do
        value=$(jq -r --arg key "$key" '.[$key]' "$CREDENTIALS_FILE")
        echo "$value" > "$SECRETS_DIR/${key}.txt"
        echo "Extracted secret for key: $key"
      done


# Ensure the /home/goldstack directory and /home/goldstack/current file exist
runcmd:
  - #
  - # Server hardening, see https://community.hetzner.com/tutorials/basic-cloud-config
  - #
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  - ufw allow OpenSSH
  - ufw allow http
  - ufw allow https
  - ufw --force enable
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)KbdInteractiveAuthentication/s/^.*$/KbdInteractiveAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)ChallengeResponseAuthentication/s/^.*$/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers goldstack' /etc/ssh/sshd_config
  - #
  - # Ensure the newly setup user uses the SSH key passed using server creation 
  - #
  - mkdir -p /home/goldstack
  - cp /root/.ssh/authorized_keys /home/goldstack/.ssh/authorized_keys
  - chown -R goldstack:goldstack /home/goldstack/.ssh
  - chmod 700 /home/goldstack/.ssh
  - chmod 600 /home/goldstack/.ssh/authorized_keys
  - chown goldstack:goldstack /home/goldstack/unpack-secrets.sh
  - systemctl start docker # Start Docker
  - systemctl enable docker # Enable Docker to run on boot
  - docker --version # Check Docker installation
  - reboot
